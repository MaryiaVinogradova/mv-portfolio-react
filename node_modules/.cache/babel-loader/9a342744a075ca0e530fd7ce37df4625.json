{"ast":null,"code":"'use strict';\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar _Object$getPrototypeOf = _interopDefault(require('babel-runtime/core-js/object/get-prototype-of'));\n\nvar _classCallCheck = _interopDefault(require('babel-runtime/helpers/classCallCheck'));\n\nvar _createClass = _interopDefault(require('babel-runtime/helpers/createClass'));\n\nvar _possibleConstructorReturn = _interopDefault(require('babel-runtime/helpers/possibleConstructorReturn'));\n\nvar _inherits = _interopDefault(require('babel-runtime/helpers/inherits'));\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nfunction addEvent(event, cb) {\n  window.addEventListener(event, cb, false);\n  return function () {\n    return window.removeEventListener(event, cb, false);\n  };\n}\n\nvar _class;\n\nvar _temp2;\n\nvar noop = function noop() {};\n\nvar ReactStickyHeader = (_temp2 = _class = function (_Component) {\n  _inherits(ReactStickyHeader, _Component);\n\n  function ReactStickyHeader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ReactStickyHeader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ReactStickyHeader.__proto__ || _Object$getPrototypeOf(ReactStickyHeader)).call.apply(_ref, [this].concat(args))), _this), _this._detatch = noop, _this._rafExecuting = false, _this.state = {\n      isSticky: _this.props.headerOnly\n    }, _this.calculateStickyState = function () {\n      if (_this._rafExecuting) {\n        return;\n      }\n\n      _this._rafExecuting = true;\n      requestAnimationFrame(function () {\n        var stickyHeaderHeight = _this._fixed.offsetHeight;\n        var headerContainer = _this._root.offsetHeight;\n\n        var headerContainerBoundingBox = _this._root.getBoundingClientRect();\n\n        var stickyOffset = _this.props.stickyOffset;\n        var pastStickyThreshold = headerContainer + headerContainerBoundingBox.top - stickyHeaderHeight <= (stickyOffset || 0);\n\n        if (pastStickyThreshold && !_this.state.isSticky) {\n          _this.setState({\n            isSticky: true\n          });\n\n          _this.props.onSticky(true);\n        } else if (!pastStickyThreshold && _this.state.isSticky) {\n          _this.setState({\n            isSticky: false\n          });\n\n          _this.props.onSticky(false);\n        }\n\n        _this._rafExecuting = false;\n      });\n    }, _this.onResize = function () {\n      // We want to flush a re-render incase the children have changed size from CSS.\n      _this.setState({}); // We want to check if because of a resize the header is now sticky or not.\n\n\n      _this.calculateStickyState();\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  } // eslint-disable-next-line react/sort-comp\n\n\n  _createClass(ReactStickyHeader, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.initialise(); // Force state change as we need to calculate the header background containers.\n      // eslint-disable-next-line react/no-did-mount-set-state\n\n      this.setState({});\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this._detatch();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.headerOnly !== this.props.headerOnly) {\n        this.calculateStickyState();\n      }\n    }\n  }, {\n    key: 'initialise',\n    value: function initialise() {\n      var _this2 = this;\n\n      if (this._initialised) {\n        return;\n      }\n\n      var detatchScroll = addEvent('scroll', this.calculateStickyState);\n      var detatchResize = addEvent('resize', this.onResize);\n\n      this._detatch = function () {\n        [detatchScroll, detatchResize].forEach(function (detatch) {\n          return detatch();\n        });\n        _this2._initialised = false;\n      };\n\n      this.calculateStickyState();\n      this._initialised = true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var backgroundUrl = this.props.backgroundImage && 'url(\\'' + this.props.backgroundImage + '\\')';\n      var headerClassName = 'ReactStickyHeader_root' + (this.props.className ? ' ' + this.props.className : '');\n      var rootClassName = '' + headerClassName + (this.state.isSticky ? ' is-sticky' : '');\n      var headerContainerHeight = this._root && this._root.offsetHeight;\n      var fixedHeaderHeight = this._fixed && this._fixed.offsetHeight;\n      return React__default.createElement('header', {\n        className: rootClassName,\n        ref: function ref(e) {\n          return _this3._root = e;\n        }\n      }, React__default.createElement('div', {\n        className: 'ReactStickyHeader_fixed',\n        ref: function ref(e) {\n          return _this3._fixed = e;\n        }\n      }, this.props.header), React__default.createElement('div', {\n        className: 'ReactStickyHeader_midground',\n        style: {\n          height: headerContainerHeight || fixedHeaderHeight,\n          top: fixedHeaderHeight,\n          backgroundImage: backgroundUrl,\n          backgroundColor: this.props.backgroundColor\n        }\n      }), this.props.headerOnly && React__default.createElement('div', {\n        style: {\n          height: fixedHeaderHeight\n        }\n      }), this.props.headerOnly || React__default.createElement('div', {\n        className: 'ReactStickyHeader_background-bg',\n        style: {\n          backgroundImage: backgroundUrl,\n          backgroundColor: this.props.backgroundColor\n        }\n      }), this.props.headerOnly || React__default.createElement('div', {\n        className: 'ReactStickyHeader_foreground',\n        style: {\n          opacity: this.state.isSticky ? 0 : 1,\n          backgroundImage: backgroundUrl,\n          backgroundColor: this.props.backgroundColor\n        }\n      }), this.props.headerOnly || this.props.children);\n    }\n  }]);\n\n  return ReactStickyHeader;\n}(React.Component), _class.defaultProps = {\n  onSticky: noop,\n  headerOnly: false\n}, _temp2);\nmodule.exports = ReactStickyHeader;","map":{"version":3,"mappings":"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","names":["addEvent","event","cb","addEventListener","window","removeEventListener","noop","ReactStickyHeader","_detatch","_rafExecuting","state","_this","props","headerOnly","calculateStickyState","stickyHeaderHeight","_fixed","offsetHeight","headerContainer","_root","headerContainerBoundingBox","getBoundingClientRect","stickyOffset","pastStickyThreshold","top","isSticky","setState","onSticky","onResize","initialise","nextProps","_initialised","detatchScroll","detatchResize","forEach","detatch","backgroundUrl","backgroundImage","headerClassName","className","rootClassName","headerContainerHeight","fixedHeaderHeight","React","ref","e","_this3","header","backgroundColor","style","height","opacity","children","Component","defaultProps"],"sources":["/Users/maryiavinogradova/Desktop/Bootcamp-homework/Portfolio/node_modules/src/utils.js","/Users/maryiavinogradova/Desktop/Bootcamp-homework/Portfolio/node_modules/src/ReactStickyHeader.js"],"sourcesContent":["// @flow\n\nexport function addEvent (event: string, cb: Function) {\n  window.addEventListener(event, cb, false);\n  return () => window.removeEventListener(event, cb, false);\n}\n","// @flow\n\nimport type { Children } from 'react';\nimport React, { Component } from 'react';\nimport { addEvent } from './utils';\n\nconst noop: any = () => {};\n\ntype Props = {\n  onSticky: (isSticky: boolean) => void,\n  header: Children,\n  headerOnly: boolean,\n  children?: Children,\n  backgroundImage?: string,\n  backgroundColor?: string,\n  className?: string,\n  stickyOffset?: number,\n};\n\nexport default class ReactStickyHeader extends Component {\n  // eslint-disable-next-line react/sort-comp\n  props: Props;\n  _detatch: () => void = noop;\n  _initialised: boolean;\n  _fixed: HTMLElement;\n  _root: HTMLElement;\n  _rafExecuting = false;\n\n  static defaultProps = {\n    onSticky: noop,\n    headerOnly: false,\n  };\n\n  state = {\n    isSticky: this.props.headerOnly,\n  };\n\n  componentDidMount () {\n    this.initialise();\n    // Force state change as we need to calculate the header background containers.\n    // eslint-disable-next-line react/no-did-mount-set-state\n    this.setState({});\n  }\n\n  componentWillUnmount () {\n    this._detatch();\n  }\n\n  componentWillReceiveProps (nextProps: Props) {\n    if (nextProps.headerOnly !== this.props.headerOnly) {\n      this.calculateStickyState();\n    }\n  }\n\n  calculateStickyState = () => {\n    if (this._rafExecuting) {\n      return;\n    }\n\n    this._rafExecuting = true;\n\n    requestAnimationFrame(() => {\n      const stickyHeaderHeight = this._fixed.offsetHeight;\n      const headerContainer = this._root.offsetHeight;\n      const headerContainerBoundingBox = this._root.getBoundingClientRect();\n      const stickyOffset = this.props.stickyOffset;\n      const pastStickyThreshold = ((headerContainer + headerContainerBoundingBox.top) - stickyHeaderHeight) <= (stickyOffset || 0);\n\n      if (pastStickyThreshold && !this.state.isSticky) {\n        this.setState({\n          isSticky: true,\n        });\n\n        this.props.onSticky(true);\n      } else if (!pastStickyThreshold && this.state.isSticky) {\n        this.setState({\n          isSticky: false,\n        });\n\n        this.props.onSticky(false);\n      }\n\n      this._rafExecuting = false;\n    });\n  };\n\n  onResize = () => {\n    // We want to flush a re-render incase the children have changed size from CSS.\n    this.setState({});\n\n    // We want to check if because of a resize the header is now sticky or not.\n    this.calculateStickyState();\n  };\n\n  initialise () {\n    if (this._initialised) {\n      return;\n    }\n\n    const detatchScroll = addEvent('scroll', this.calculateStickyState);\n    const detatchResize = addEvent('resize', this.onResize);\n\n    this._detatch = () => {\n      [detatchScroll, detatchResize].forEach((detatch) => detatch());\n      this._initialised = false;\n    };\n\n    this.calculateStickyState();\n    this._initialised = true;\n  }\n\n  render () {\n    const backgroundUrl = this.props.backgroundImage && `url('${this.props.backgroundImage}')`;\n    const headerClassName = `ReactStickyHeader_root${this.props.className ? ` ${this.props.className}` : ''}`;\n    const rootClassName = `${headerClassName}${this.state.isSticky ? ' is-sticky' : ''}`;\n    const headerContainerHeight = this._root && this._root.offsetHeight;\n    const fixedHeaderHeight = this._fixed && this._fixed.offsetHeight;\n\n    return (\n      <header className={rootClassName} ref={(e) => (this._root = e)}>\n        <div className=\"ReactStickyHeader_fixed\" ref={(e) => (this._fixed = e)}>\n          {this.props.header}\n        </div>\n\n        <div\n          className=\"ReactStickyHeader_midground\"\n          style={{\n            height: headerContainerHeight || fixedHeaderHeight,\n            top: fixedHeaderHeight,\n            backgroundImage: backgroundUrl,\n            backgroundColor: this.props.backgroundColor,\n          }}\n        />\n\n        {this.props.headerOnly && <div style={{ height: fixedHeaderHeight }} />}\n\n        {this.props.headerOnly || (\n          <div\n            className=\"ReactStickyHeader_background-bg\"\n            style={{ backgroundImage: backgroundUrl, backgroundColor: this.props.backgroundColor }}\n          />\n        )}\n\n        {this.props.headerOnly || (\n          <div\n            className=\"ReactStickyHeader_foreground\"\n            style={{ opacity: this.state.isSticky ? 0 : 1, backgroundImage: backgroundUrl, backgroundColor: this.props.backgroundColor }}\n          />\n        )}\n\n        {this.props.headerOnly || this.props.children}\n      </header>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}